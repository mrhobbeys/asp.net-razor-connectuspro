@model Plumber.Models.Media
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<form action="@Url.Content("~/Admin/Media/Edit")" method="post" enctype="multipart/form-data">
    @Html.ValidationSummary(true)
    <fieldset>
        @Html.HiddenFor(model => model.MediaId)
        @Html.HiddenFor(model => model.MediaPath)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Title, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SubTitle)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.SubTitle, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.SubTitle)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Content, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.Content)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PublicationDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.PublicationDate, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.PublicationDate)
        </div>

        
        <div class="editor-label">
            @Html.LabelFor(model => model.MediaType)
        </div>
        <div class="editor-field">
            @Html.DropDownList("MediaType", new List<SelectListItem>(){ 
                                                new SelectListItem(){ Text = "Select a media type", Value = ""},
                                                new SelectListItem(){ Text="Audio", Value = "1"},
                                                new SelectListItem(){ Text = "Video", Value = "2"}}, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.MediaType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MediaExtensionId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("MediaExtensionId", null, string.Empty, new { @class = "aformtext" })
            @Html.ValidationMessageFor(model => model.MediaExtensionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MediaPath)
        </div>
        <div class="editor-field">
            <input type="file" id="file" name="file" class="aformtext" />
            @Html.ValidationMessageFor(model => model.MediaPath)
        </div>
        
        @if ((Model.MediaPath != null) && (Model.MediaPath != ""))
        {
            <div class="editor-label">
                <h3>Current file</h3>
                <a href="@Url.Content(Model.MediaPath)" target="_blank">@Model.MediaPath.Replace("~/Content/Uploads/", "")</a>
                <br />
            </div>
        }
        @*<div class="editor-label">
            @Html.LabelFor(model => model.IsArchived)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsArchived)
            @Html.ValidationMessageFor(model => model.IsArchived)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsDeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>*@
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
</form>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    
//	tinyMCE.init({
//		// General options
//		mode : "exact",
//		elements : "Address",
//		theme : "simple"
//    });
    tinyMCE.init({
        // General options
        mode: "exact",
        elements: "Content",
        theme: "advanced",
        skin: "o2k7",
        plugins: "lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,inlinepopups,autosave",

        // Theme options
        theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
        theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
        theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
        theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_statusbar_location: "bottom",
        theme_advanced_resizing: true,

        // Example content CSS (should be your site CSS)
        content_css: '@Url.Content("~/Content/tiny_mce.css")',

        // Drop lists for link/image/media/template dialogs
        template_external_list_url: "@Url.Content("~/Script/lists/template_list.js")",
        external_link_list_url: "@Url.Content("~/Script/lists/link_list.js")",
        external_image_list_url: "@Url.Content("~/Script/lists/image_list.js")",
        media_external_list_url: "@Url.Content("~/Script/lists/media_list.js")",

        // Replace values for the template plugin
        template_replace_values: {
            username: "Some User",
            staffid: "991234"
        }
    });
</script>
