@model SiteBlue.Data.EightHundred.tbl_PayrollDetails
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>Employee Payroll Details</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      <link href="../../../../Content/Tablestyle.css" rel="stylesheet" type="text/css" />
    <link href="../../../../codebase/dhtmlxgrid.css" rel="stylesheet" type="text/css" />
    <link href="../../../../codebase/skins/dhtmlxgrid_dhx_skyblue.css" rel="stylesheet"
        type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../../../codebase/dhtmlxwindows.css" />
    <link rel="stylesheet" type="text/css" href="../../../../codebase/skins/dhtmlxwindows_dhx_skyblue.css" />
    <script src="../../../../codebase/dhtmlxcommon.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxgrid.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxgridcell.js" type="text/javascript"></script>
    <script src="../../../../content/json2.js" type="text/javascript"></script>
    <link href="../../../../Content/Report.css" rel="stylesheet" type="text/css" />
    <link rel="icon" href="../../../../../../common/favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" href="../../../../../../common/favicon.ico" type="image/x-icon" />
    <link rel="stylesheet" href="../../../../../../common/css/style.css" type="text/css"
        media="screen" />
    <link href="../../../../Content/Site.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../../../../codebase/dhtmlxcalendar.css" />
    <link rel="stylesheet" type="text/css" href="../../../../../codebase/skins/dhtmlxcalendar_dhx_skyblue.css" />
    <link href="../../../../codebase/dhtmlxgrid.css" rel="stylesheet" type="text/css" />
    <link href="../../../../codebase/skins/dhtmlxgrid_dhx_skyblue.css" rel="stylesheet"
        type="text/css" />
    <script src="../../../../codebase/dhtmlxcommon.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxgrid.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxgridcell.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxgrid_excell_link.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxwindows.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxcontainer.js" type="text/javascript"></script>
    <script src="../../../../../codebase/dhtmlxcalendar.js"></script>
    <link href="../../../../Content/Site.css" rel="stylesheet" type="text/css" />
    <script src="../../../../codebase/dhtmlxgrid_pgn.js" type="text/javascript"></script>
    <link href="../../../../codebase/dhtmlxgrid_pgn_bricks.css" rel="stylesheet" type="text/css" />
    <link rel="Stylesheet" type="text/css" href="../../../../codebase/dhtmlxtabbar.css" />
    <script src="../../../../codebase/dhtmlxcommon.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxtabbar.js" type="text/javascript"></script>
    <script src="../../../../codebase/dhtmlxtabbar_start.js" type="text/javascript"></script>
    <link href="../../../../Content/Report.css" rel="stylesheet" type="text/css" />
    <link rel="icon" href="../../../../../../common/favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" href="../../../../../../common/favicon.ico" type="image/x-icon" />
    <link rel="stylesheet" href="../../../../../../common/css/style.css" type="text/css"
        media="screen" />
    <link href="../../../../Content/Tablestyle.css" rel="stylesheet" type="text/css" />
    <script src="../../../../codebase/dhtmlxgrid_pgn.js" type="text/javascript"></script>
    <link href="../../../../codebase/dhtmlxgrid_pgn_bricks.css" rel="stylesheet" type="text/css" />
    <script src="../../../../codebase/dhtmlxgrid_srnd.js" type="text/javascript"></script>
    <script type="text/javascript">
        dhtmlx.skin = "dhx_skyblue";
    </script>
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    
    <script type="text/javascript">
        function doOnLoad(Empid, day, id) {
//            doOnDataLoad(Empid, day, id);
//            doOnJobData(Empid,id);            
        }

        function changeDay(Empid, day, id) {
            doOnDataLoad(Empid, day, id);
        }

        function doOnDataLoad(Empid, day, id) {
            document.getElementById("DayDetails").innerHTML = day+' Details';
            var xmlstringDetailDate = "";
            var empid = { Empid: Empid, DetailDay: day, id: id };
            var jsondata = $.ajax({
                url: "/PayrollHistory/PayrollDetailDayData",
                data: JSON.stringify(empid),
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    gridEmpList = new dhtmlXGridObject("DetailDayGrid");
                    //gridEmpList.setInitWidths("50,50,50");
                    gridEmpList.setHeader("Status,Time,Comments", null, ["text-align:center", "text-align:center", "text-align:center"]);
                    //gridEmpList.setColumnIds("TimeClockStatusDesc,DateTimeStatusChanged,Comments");
                    gridEmpList.setColAlign("center,center,center");
                    gridEmpList.setColTypes("coro,ed,ed");
                    //!added

                    //                    gridEmpList.enablePaging(true, 20, 3, "gridpgn", false);
                    //                    gridEmpList.setPagingSkin("bricks");
                    //gridEmpList.attachEvent("onRowDblClicked", "RowDblClick");
                    gridEmpList.init();
                    gridEmpList.setSkin("dhx_skyblue");

                    var AdForHomePages = msg;
                    xmlstringDetailDate = xmlstringDetailDate + "<rows>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "<head>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "<column type='coro' align='left' xmlcontent='1'>Status<option value='1'>Clocked-In</option><option value='2'>Clocked-Out</option>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "</column>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "<column type='ed'>Time</column>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "<column type='ed' align='left'>Comments</column>";
                    //                    xmlstringDetailDate = xmlstringDetailDate + "</head>";

                    $.each(AdForHomePages, function (index, PayrollTimeClock) {

                        var parsedDate = new Date(parseInt(PayrollTimeClock.DateTimeStatusChanged.substr(6)));
                        var newDate = new Date(parsedDate);
                        var getHour = newDate.getHours();
                        var getMinute = newDate.getMinutes();
                        var hourString = getHour.toString();
                        var MinuteString = getMinute.toString();
                        if (hourString.length == 1) {
                            getHour = "0" + hourString;
                        }
                        if (MinuteString.length == 1) {
                            getMinute = "0" + MinuteString;
                        }
                        if (getHour > 11) {
                            var dateId = "PM";
                        } else {
                            var dateId = "AM";
                        }


                        xmlstringDetailDate = xmlstringDetailDate + "<row id='" + PayrollTimeClock.TimeClockID + "'>";
                        xmlstringDetailDate = xmlstringDetailDate + "<cell><![CDATA[" + PayrollTimeClock.TimeClockStatusDesc + "]]></cell>";
                        if (PayrollTimeClock.DateTimeStatusChanged != "") {
                            xmlstringDetailDate = xmlstringDetailDate + "<cell><![CDATA[" + getHour + ":" + getMinute + ":00" + " " + dateId + "]]></cell>";
                        }
                        else {
                            xmlstringDetailDate = xmlstringDetailDate + "<cell><![CDATA[" + '' + "]]></cell>";
                        }
                        if (PayrollTimeClock.Comments != null) {
                            xmlstringDetailDate = xmlstringDetailDate + "<cell><![CDATA[" + PayrollTimeClock.Comments + "]]></cell>";
                        } else {
                            xmlstringDetailDate = xmlstringDetailDate + "<cell></cell>";
                        }
                        xmlstringDetailDate = xmlstringDetailDate + "</row>";
                    });
                    xmlstringDetailDate = xmlstringDetailDate + "</rows>";
                    //mygrid.clearAll();

                    gridEmpList.loadXMLString(xmlstringDetailDate);
                    //gridEmpList.load("/PayrollHistory/Data?=" + gridEmpList.uid());
                    //DataProcessorEmpList = new dataProcessor("/PayrollHistory/Save");
                    //lock feed url;
                    //DataProcessorEmpList.setTransactionMode("POST", false);
                    //DataProcessorEmpList.enableDataNames(true);
                    //DataProcessorEmpList.init(gridEmpList);

                },
                type: "POST",
                dataType: "json",
                error: function (e) {
                    $('#output').innerHtml(e);

                }
            });
        }

        function CommaFormatted(amount) {
            try {

                amount = String(Math.round(amount * 100) / 100);
                var delimiter = ","; // replace comma if desired  
                var a = String(amount).split('.', 2)
                var d = '00';
                if (a[1] != null) {
                    d = a[1];
                }

                var i = parseInt(a[0]);
                if (isNaN(i)) { return '0.00'; }
                var minus = '';
                if (i < 0) { minus = '-'; }
                i = Math.abs(i);
                var n = new String(i);
                var a = [];
                while (n.length > 3) {
                    var nn = n.substr(n.length - 3);
                    a.unshift(nn);
                    n = n.substr(0, n.length - 3);
                }
                if (n.length > 0) { a.unshift(n); }
                n = a.join(delimiter);
                if (d.length < 1) { amount = n; }
                else { amount = n + '.' + d; }
                amount = minus + amount;
                return amount;
            } catch (e) {
                return "0.00";
            }
        }

        function RowClick(rId, cInd) {
            var cellObj = gridJobData.cellById(rId, 0);
            window.location.href = "../invoice/InvoiceDetails?JobId=" + cellObj.getValue();
        }

        function doOnJobData(Empid,id) {
            var xmlstringJobData = "";
            var empid = { Empid: Empid,Payrollid:id };
            var jsondata = $.ajax({
                url: "/PayrollHistory/PayrollJobData",
                data: JSON.stringify(empid),
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    gridJobData = new dhtmlXGridObject("JobPayrollGrid");
                    //gridJobData.setInitWidths(",,150,150,150,150,150,150");
                    gridJobData.setHeader("Job,Job Date,Parts Total,Parts Comm,Labor Total,Labor Comm,Spifs,Gross Pay", null, ["text-align:center", "text-align:center", "text-align:center", "text-align:center", "text-align:center", "text-align:center", "text-align:center", "text-align:center"]);
                    gridJobData.setColAlign("left,left,right,right,right,right,right,right");
                    gridJobData.setColTypes("ed,ed,ed,ed,ed,ed,ed,ed");
                    gridJobData.enablePaging(true, 10, 3, "gridpgn", false);
                    gridJobData.setPagingSkin("bricks");
                    //                    gridJobData.attachEvent("onRowDblClicked", "RowDblClick");
                    gridJobData.attachEvent("onRowSelect", "RowClick");
                    gridJobData.init();
                    gridJobData.setColumnHidden(0, true);
                    gridJobData.setSkin("dhx_skyblue");

                    var AdForHomePages = msg;
                    xmlstringJobData = xmlstringJobData + "<rows>";
                    $.each(AdForHomePages, function (index, Payroll_Details) {

                        xmlstringJobData = xmlstringJobData + "<row id='" + index + "'>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + Payroll_Details.JobID + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + Payroll_Details.Address + "]]></cell>";
                        if (Payroll_Details.ServiceDate != "") {
                            xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + new Date(parseInt(Payroll_Details.ServiceDate.substr(6))) + "]]></cell>";
                        }
                        else {
                            xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + '' + "]]></cell>";
                        }

                        var pTotal = '';
                        var tcParts = '';
                        var jlTotal = '';
                        var tcLabor = '';
                        var tcSpifs = '';
                        var gPay = '';
                        if (Payroll_Details.JobPartsTotal == 'undefined' || Payroll_Details.JobPartsTotal == '0') {
                            pTotal = "$0.00";
                        }
                        else {
                            pTotal = "$";
                            pTotal += CommaFormatted(Payroll_Details.JobPartsTotal);
                        }

                        if (Payroll_Details.TotalCommissionParts == 'undefined' || Payroll_Details.TotalCommissionParts == '0') {
                            tcParts = "$0.00";
                        }
                        else {
                            tcParts = "$";
                            tcParts += CommaFormatted(Payroll_Details.TotalCommissionParts);
                        }
                        if (Payroll_Details.JobLaborTotal == 'undefined' || Payroll_Details.JobLaborTotal == '0') {
                            jlTotal = "$0.00";
                        }
                        else {
                            jlTotal = "$";
                            jlTotal += CommaFormatted(Payroll_Details.JobLaborTotal);
                        }
                        if (Payroll_Details.TotalCommissionLabor == 'undefined' || Payroll_Details.TotalCommissionLabor == '0') {
                            tcLabor = "$0.00";
                        }
                        else {
                            tcLabor = "$";
                            tcLabor += CommaFormatted(Payroll_Details.TotalCommissionLabor);
                        }
                        if (Payroll_Details.TotalCommissionSpifs == 'undefined' || Payroll_Details.TotalCommissionSpifs == '0') {
                            tcSpifs = "$0.00";
                        }
                        else {
                            tcSpifs = "$";
                            tcSpifs += CommaFormatted(Payroll_Details.TotalCommissionSpifs);
                        }
                        if (Payroll_Details.GrossPay == 'undefined' || Payroll_Details.GrossPay == '0') {
                            gPay = "$0.00";
                        }
                        else {
                            gPay = "$";
                            gPay += CommaFormatted(Payroll_Details.GrossPay);
                        }

                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + pTotal + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + tcParts + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + jlTotal + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + tcLabor + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + tcSpifs + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "<cell><![CDATA[" + gPay + "]]></cell>";
                        xmlstringJobData = xmlstringJobData + "</row>";
                    });
                    xmlstringJobData = xmlstringJobData + "</rows>";
                    //mygrid.clearAll();

                    gridJobData.loadXMLString(xmlstringJobData);

                },
                type: "POST",
                dataType: "json",
                error: function (e) {
                    $('#output').innerHtml(e);

                }
            });
        }

        function add_r() {
            gridEmpList.addRow(gridEmpList.uid(), ["Select", "1/1/2011", ""], 0);
            gridEmpList.selectCell(0, 1);
            gridEmpList.editCell();

        }

        
        function Edit_Row() {
            var selectedIndex = gridEmpList.getSelectedRowId();
            if (selectedIndex != null) {
                document.getElementById("popUpTime").style.display = "block";
                dhxWins = new dhtmlXWindows();
                dhxWins.enableAutoViewport(false);
                dhxWins.attachViewportTo("popupWindow");
                dhxWins.setImagePath("../../codebase/imgs/");
                JobWindow = dhxWins.createWindow("JobWindow", 450, 50, 500, 350);
                dhxWins.window("JobWindow").setModal(true);
                dhxWins.attachEvent("onClose", function (win) {
                    dhxWins.window("JobWindow").detachObject("popUpTime");
                    return true;
                });


                var clockId = { timeId: selectedIndex };
                var jsondata = $.ajax({
                    url: "/PayrollHistory/TimeClockEditData",
                    data: JSON.stringify(clockId),
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        var day = document.getElementById("DayDetails").innerHTML;
                        JobWindow.setText(day);

                        //jobCountGrid = JobWindow.attachGrid();
                        dhxWins.window("JobWindow").attachObject("popUpTime");
                        document.getElementById("txtComments").value = msg[0].Comments;
                        if (msg[0].TimeClockStatusID == 1) {
                            document.getElementById("txtStatus").value = 1;
                        }
                        else {
                            document.getElementById("txtStatus").value = 2;
                        }
                        document.getElementById("txtStatus").value = msg[0].TimeClockStatusID;
                        var newDate = new Date(parseInt(msg[0].DateTimeStatusChanged.substr(6)));

                        var getHour = newDate.getHours();
                        var getMinute = newDate.getMinutes();
                        var hourString = getHour.toString();
                        var MinuteString = getMinute.toString();
                        if (hourString.length == 1) {
                            getHour = "0" + hourString;
                        }
                        if (MinuteString.length == 1) {
                            getMinute = "0" + MinuteString;
                        }
                        if (getHour > 11) {
                            var dateId = "PM";
                        } else {
                            var dateId = "AM";
                        }

                        document.getElementById("txtTime").value = getHour + ":" + getMinute + ":00" + " " + dateId;

                    },
                    type: "POST",
                    dataType: "json",
                    error: function (e) {
                        $('#output').innerHtml(e);
                    }
                });
            }
            else {
                alert("Please select any Row to edit");
            }
        }

        function Add_Row() {
            document.getElementById("popUpTimeAdd").style.display = "block";
            dhxWinsAdd = new dhtmlXWindows();
            dhxWinsAdd.enableAutoViewport(false);
            dhxWinsAdd.attachViewportTo("popupWindow");
            dhxWinsAdd.setImagePath("../../codebase/imgs/");
            JobWindowAdd = dhxWinsAdd.createWindow("JobWindowAdd", 450, 50, 500, 350);
            dhxWinsAdd.window("JobWindowAdd").setModal(true);
            dhxWinsAdd.attachEvent("onClose", function (win) {
                dhxWinsAdd.window("JobWindowAdd").detachObject("popUpTimeAdd");
                return true;
            });

            dhxWinsAdd.window("JobWindowAdd").attachObject("popUpTimeAdd");
        }

        function CancelAdd() {
            dhxWinsAdd.window("JobWindowAdd").close();
        }

        function Cancel() {
            dhxWins.window("JobWindow").close();
        }

    </script>
    
</head>
<body onload="doOnLoad(@ViewBag.EmpId,'Saturday',@ViewBag.payrollId)">
    <div style="background-color: #2C2D31; height: 30px; width: 100%">
        <div style="float: left; padding-right: 30px; padding-left: 10px; height: 25px;">
        <a href='@Url.Action(string.Empty, "Dashboard", new { Area = "LandingPage" })'>
            <img src="../../../../Images/ConnectusPro logo CMYK 2.png" width="150px" alt="Connectus Pro"
                height="30px" /></a>
        </div>
        <div style="padding-left: 30px; padding-top: 5px">
            @*@Html.DropDownList("ddlFrenchise", new SelectList(ViewBag.frenchise, "FranchiseID", "FranchiseNUmber", ViewBag.FranchiseeNumber), (string)ViewBag.FranchiseeNumber, new { onchange = "doOnLoad()" })*@
        </div>
    </div>
    <fieldset style="vertical-align: bottom; padding: 5px 0px 5px 5px; width: 100%">
        <div style="margin-right: 50px; float: left">
            <label style="font-size: larger; font-weight: bold;">
                Payroll Details for
            </label>
            <label style="margin-right: 10px; font-size: larger; font-weight: bold;">@ViewBag.EmpName</label>
        </div>
    </fieldset>
    <div id="popupWindow">
        <table>
            <tr>
                <td style="width: 40%">
                    <table>
                        <tr>
                            <td colspan="3">
                                <label style="font-size: larger; font-weight: bold;">
                                    Hours for Weeks
                                </label>
                                @*<input type="text" onkeydown="var lilKey=event.keyCode;if(lilKey==48){return true}else if(lilKey>=49&&lilKey<=57){return true}else{alert('Numbers only!');return false;}"/> *@
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 30%">
                                @*@Html.ActionLink("Sunday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Sunday',@ViewBag.payrollId)">
                                    Sunday</a>
                            </td>
                            <td colspan="2">
                                @Html.TextBoxFor(model => model.SundayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "SundayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Monday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Monday',@ViewBag.payrollId)">
                                    Monday</a>
                            </td>
                            <td colspan="2">
                                @Html.TextBoxFor(model => model.MondayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "MondayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Tuesday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Tuesday',@ViewBag.payrollId)">
                                    Tuesday</a>
                            </td>
                            <td colspan="2">
                                @Html.TextBoxFor(model => model.TuesdayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "TuesdayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Wednesday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Wednesday',@ViewBag.payrollId)">
                                    Wednesday</a>
                            </td>
                            <td colspan="2">
                                @Html.TextBoxFor(model => model.WednesdayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "WednesdayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Thursday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Thursday',@ViewBag.payrollId)">
                                    Thursday</a>
                            </td>
                            <td colspan="2">
                                    @Html.TextBoxFor(model => model.ThursdayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "ThursdayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Friday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Friday',@ViewBag.payrollId)">
                                    Friday</a>
                            </td>
                            <td colspan="2">
                                @Html.TextBoxFor(model => model.FridayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "FridayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.ActionLink("Saturday", "")*@ <a href="javascript:changeDay(@ViewBag.EmpId,'Saturday',@ViewBag.payrollId)">
                                    Saturday</a>
                            </td>
                            <td colspan="2">
                                    @Html.TextBoxFor(model => model.SaturdayHours, new { style = "width:50px;", @readonly = "readonly", @disabled = "disabled", id = "SaturdayHours" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>
                                    Regular Hours</label>
                            </td>
                            <td>
                                <label>
                                    Regular Rate</label>
                            </td>
                            <td>
                                <label>
                                    Regular Total</label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.TextBoxFor(model => model.RegularHours, new { @disabled = "disabled", id = "RegularHours" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.RegularRate, new { @disabled = "disabled", id = "RegularRate" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.RegularPay, new { @disabled = "disabled", id = "RegularTotal" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>
                                    OT Hours</label>
                            </td>
                            <td>
                                <label>
                                    OT Rate</label>
                            </td>
                            <td>
                                <label>
                                    OT Total</label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.TextBoxFor(model => model.OTHours, new { @disabled = "disabled", id = "OTHours" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.OTRate, new { @disabled = "disabled", id = "OTRate" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.OTPay, new { @disabled = "disabled", id = "OTTotal" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>
                                    Commission Rate/Hr</label>
                            </td>
                            <td>
                                <label>
                                    OT Hours</label>
                            </td>
                            <td>
                                <label>
                                    OT Multiplier</label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.TextBoxFor(model => model.CommissionRateHour, new { @disabled = "disabled", id = "CommRate" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.OTHours, new { @disabled = "disabled", id = "OTHours2" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.CommissionOTMultiplier, new { @disabled = "disabled", id = "OTMultiplier" })
                            </td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table style="100%">
                        <tr>
                            <td>
                                <label id="DayDetails" style="font-size: larger; font-weight: bold;">Saturday Details</label>
                               @* @Html.Label("DayDetails", "Saturday Details")*@
                            </td>
                            <td align="right">
                            <!-- TODO: Add these controls to timesheet entry instead
                                <a href="javascript:Add_Row()">Add Row</a>
                                <a href="javascript:Edit_Row()" style="margin-left:10px;">Edit Row</a>
                            -->
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <div id="DetailDayGrid" style="height: 416px">
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td>
                    <div id="JobPayrollGrid" style="height: 250px">
                    </div>
                    <div id="gridpgn">
                    </div>
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td style="width: 15%">
                    <label>
                        Adjustment Reason</label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AdjustmentReason, new { style = "width:80%", @readonly = "readonly", id = "AdjustReason" })
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td style="width: 8%">
                    <label>
                        Comm Labor %</label>
                </td>
                <td>
                    @if (ViewBag.CommLabor != null)
                    {
                        @Html.TextBox("CommLabor", (decimal)ViewBag.CommLabor, new { style = "width:50px;margin-right:20px;" ,@readonly = "readonly", @disabled = "disabled"})
                    }
                    else
                    {
                        @Html.TextBox("CommLabor", "", new { style = "width:50px;margin-right:20px;" ,@readonly = "readonly", @disabled = "disabled"})
                    }
                </td>
                <td>
                    <label>
                        Weekly salary</label>
                </td>
                <td>
                    <label>
                        Hourly Total</label>
                </td>
                <td>
                    <label>
                        Commission Total</label>
                </td>
                <td>
                    <label>
                        OT Additional Commission</label>
                </td>
                <td>
                    <label>
                        Adjustment</label>
                </td>
                <td>
                    <label>
                        Gross Total</label>
                </td>
            </tr>
            <tr>
                <td>
                    <label>
                        Parts %</label>
                </td>
                <td>
                    @if (ViewBag.Parts != null)
                    {
                        @Html.TextBox("Parts", (decimal)ViewBag.Parts, new { style = "width:50px;",@readonly = "readonly", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.TextBox("Parts", "", new { style = "width:50px;" ,@readonly = "readonly", @disabled = "disabled"})
                    }
                </td>
                <td>
                    @Html.TextBoxFor(model => model.WeeklySalary, new { @disabled = "disabled", id = "WeeklySalary" })
                </td>
                <td>
                    @if ((Model.RegularPay != null) && (Model.OTPay != null))
                    {
                        @Html.TextBox("HourlyTotal", (decimal)(Model.RegularPay + Model.OTPay), new {@disabled = "disabled"})
                    }
                    else
                    {
                        @Html.TextBox("HourlyTotal", "", new {@disabled = "disabled"})
                    }
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TotalCommission, new { @disabled = "disabled", id = "CommTotal" })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.OTAdditCommission, new { @disabled = "disabled", id = "OTAddiComm" })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Adjustment, new { @disabled = "disabled", id = "Adjustment" })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.GrossPay, new { @disabled = "disabled", id = "GrossTotal" })
                </td>
            </tr>
        </table>
    </div>
    <div id="popUpTime" style="display:none;">
        <table style="margin-top:50px;margin-left:70px;">
            <tr>
                <td>
                    <label>Status</label>
                </td>
                <td>
                    @*@Html.TextBox("txtStatus", "")*@
                    @Html.DropDownList("txtStatus", new SelectList(ViewBag.statusList, "TimeClockStatusID", "TimeClockStatusDesc", ""))
                </td>
            </tr>
            <tr>
                <td>
                    <label>Time</label>
                </td>
                <td>
                    @Html.TextBox("txtTime", "")
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <label>Comments</label>
                </td>
                <td>
                    @Html.TextArea("txtComments", "")
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <!--<input type="button" value="Update" onclick="UpdateData('@ViewBag.EmpId','@ViewBag.payrollId')"/>-->
                    <input type="button" value="Cancel" style="margin-left:10px;" onclick="Cancel();"/>
                </td>
            </tr>
        </table>
    </div>

</body>
</html>
