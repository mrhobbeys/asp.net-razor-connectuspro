@model SiteBlue.Areas.SecurityGuard.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "ResetPassword";
}

<h2>
    Reset Password</h2>

<link href="@Url.Content("~/Content/themes/base/questionnaire.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/validationEngine.jquery.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery-1.6.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/modernizr-1.7.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/languages/jquery.validationEngine-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<fieldset class="login">
    <h2>
        Password Requirements</h2>
    <ul>
        <li>To be a minimum of @Membership.MinRequiredPasswordLength characters in length.</li>
        @if (Membership.MinRequiredNonAlphanumericCharacters > 0)
        {
            <li>To have a minimum of @Membership.MinRequiredNonAlphanumericCharacters non-alpha
                numeric characters included, such as &quot;<span style="font-family: Courier New;
                    font-size: 16px;">(){}-_*&^%$#@@!</span>&quot;.</li>
        }
    </ul>
    @using (Html.BeginForm("ResetPassword", "Membership", FormMethod.Post, new { id = "form", @class = "form" }))
    {
        @Html.ValidationSummary(true, "Password change was unsuccessful. Please correct the errors and try again.")
      
        <div class="formLogIn">
            <div class="formComponent formComponentSingleLineText">
                <label for="NewPassword" class="formComponentLabel">
                    New password:<span class="labelRequiredStar"> *</span></label>
                <div class="inputs">
                    <span class="input_wrapper">@Html.TextBoxFor(m => m.NewPassword, new { @class = "validate[required]", type = "password" })</span>
                </div>
            </div>
            <div class="formComponent formComponentSingleLineText">
                <label for="UserName" class="formComponentLabel">
                    Confirm new password:<span class="labelRequiredStar"> *</span></label>
                <div class="inputs">
                    <span class="input_wrapper">@Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "validate[required,equals[NewPassword]]", type = "password" })</span>
                </div>
            </div>
            <div class="formComponent formComponentSingleLineText">
                <a class="formbutton" id="reset">Change Password</a>
            </div>
       </div>
    
    }
</fieldset>
<script type="text/javascript">

    $(function () {
        // binds form submission and fields to the validation engine
        $("form").validationEngine();

        $("#NewPassword").val('');
        $("#NewPassword").focus();

        // highlights the parent div when focus a child field
        $("input").focus(function () {
            $('.formComponent').removeClass('formComponentHighlight');
            $(this).parents('.formComponent').addClass('formComponentHighlight');
        });

        $("#reset").click(function () {
            changePassword();

        });

        $('#NewPassword').keyup(function (e) {
            //alert(e.keyCode);
            if (e.keyCode == 13) {
                $('#ConfirmPassword').focus();
            }
        });

        $('#ConfirmPassword').keyup(function (e) {
            //alert(e.keyCode);
            if (e.keyCode == 13) {
                changePassword();
            }
        });

        function changePassword() {
            $('.formComponent').removeClass('formComponentHighlight ')
            $('.formComponent').removeClass('formComponentValidationFailed')
            var $div = $(".formLogIn:visible"); // Get current step
            var validator = $("form").validate(); // Obtain validator
            var anyError = false;

            $div.find("input").each(function () {
                if (!validator.element(this)) {
                    // apply error style
                    $(this).parents('.formComponent').addClass('formComponentValidationFailed');
                    anyError = true;
                }
            });

            if (anyError) return false; // Exit if any error found

            else { // this is last step, submit form
                $.ajax({
                    url: '@Url.Action("ResetPassword", "Membership")',
                    dataType: 'json',
                    type: 'POST',
                    data: $("form").serialize(),
                    success: function (data) {
                        if (data.success) {
                            alert("Password has been reset");
                            parent.parent.dhxWinsAdd.window("resetPwdWindowAdd").close(); //Close the current window.
                        }
                        else {
                            alert("Password can not be reset");
                        }

                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }
        }
    });
</script>
