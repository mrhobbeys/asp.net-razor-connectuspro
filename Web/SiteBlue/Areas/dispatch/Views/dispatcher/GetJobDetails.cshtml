@using SiteBlue.Data.EightHundred;
@using SiteBlue.Areas.dispatch.Models
@model JobViewModel
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
    <title>Job Details - @Model.JobID</title> 
    <link href="@Url.Content("~/codebase/dhtmlxcalendar.css")" rel="stylesheet" type="text/css"  />
    <link href="@Url.Content("~/codebase/skins/dhtmlxcalendar_dhx_skyblue.css")" rel="stylesheet" type="text/css" />

    <script src="@Url.Content("~/codebase/dhtmlxcalendar.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.6.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/jquery.dateFormat-1.0.js")" type="text/javascript"></script>
    
    <style type="text/css">
        body, textarea, select, button, input
        {
            font-family: tahoma;
            font-size: 11px;
        }
        label
        {
            font-weight: bold;
            float: left;
            width: 100%;
            margin-top: 5px;
        }
        fieldset
        {
            margin-top: 20px;
            padding: 2px;
            border: 1px solid #c0c0c0;
            width:100%;
        }
        .column
        {
            padding:10px;
        }
        
        
        legend
        {
            margin-top: -17px;
            margin-left: -2px;
            font-weight: bold;
            font-size: 120%;
            border-bottom: 1px solid #c0c0c0;
            background-color: #c0c0c0;
            width: 100%;
            float: left;
            padding: 0;
        }
        select {width:100%}
        #changeStatus
        {
            float:right;
            margin-top:10px;
        }
        .primaryTech
        {
            background-color:#c9c9c9
        }
    </style>
</head>
<body>
    <script language="javascript" type="text/javascript">
        function saveNote() {
            spin(true);

            var newTxt = "@HttpContext.Current.User.Identity.Name @@ " +
                $.format.date(new Date(), 'MM/dd/yy hh:mma') +
                    ": " + $("#newNotes").val();

            var toPost = { id: @Model.JobID , note: newTxt };
            $.post('@Url.Action("SaveNote")', toPost, function(result) {
                if (!result.Success)
                {
                    alert("The following comment could not be saved:\n\n" + $("#newNotes").val());
                }
                else
                {
                    $("#pastNotes").html(newTxt + "<br />" + $("#pastNotes").html());
                    log("Added note to job: " + $("#newNotes").val());
                    $("#newNotes").val("");
                }
                spin(false);
            });
        }

        function saveAssignedTech(op, tech) {
            spin(true);

            var toPost = { id: @Model.JobID , action : op, techId : tech };
            $.post('@Url.Action("SaveAssignedTechnicians")', toPost, function(result) {
                if (!result.Success)
                {
                    alert(result.Message);
                    $('#assignedTechs option[value=' + tech + ']').remove();
                }
                else
                    log("Assigned technician " + tech + (op == "primary" ? " is now primary." : (op == "remove" ? " was removed." :"")));
                
                spin(false);
            });
        }

        var startCal, endCal;
        
        $(document).ready(function () {

            if ($("#ddlStatus option:selected").text() != 'Cancelled' && $("#ddlStatus option:selected").text() != 'Re-Scheduled')
                $("#cancelReason").hide();
     
            $("#newNotes").keydown(function(event) {
                if (event.which == 13) {
                    event.preventDefault();
                    saveNote();
                };
            });
        

            $("#ddlStatus").change(function() {
                var newStatus = $("#ddlStatus option:selected").text();
                
                if (newStatus == 'Cancelled')
                    $("#cancelReason").fadeIn();
                else
                    $("#cancelReason").fadeOut();
            });


            $("#changeStatus").click(function() {
                spin(true);
                var needsReason = $("#ddlStatus option:selected").text() == 'Cancelled';
                var toPost = { id: @Model.JobID 
                             , statusId :parseInt($("#ddlStatus").val())
                             , reason : needsReason ? parseInt($("#ddlCancelReason").val()) : 0 
                             };

            
                $.post('@Url.Action("SaveStatus")', toPost, function(result) {
                    if (!result.Success) {
                        alert("The new status could not be saved.");
                    } else {
                        var newStatus = $("#ddlStatus option:selected").text();

                        if (newStatus != 'Cancelled')
                            $("#ddlCancelReason").fadeOut();
                        else
                            $("#ddlCancelReason").fadeIn();
                    
                        log("Status changed to " + toPost.statusId + " - Reason: " + toPost.reason);
                    }
                    spin(false);
                });
        
            });

            $("#assignedTechs").dblclick(function() {
                if ($("#assignedTechs option:selected").hasClass("primaryTech")) {
                    alert("You cannot remove the primary technician.  Transfer the primary role to another technician first.");
                    return;
                }

                var toRemove = $("#assignedTechs option:selected").val();
                $("#assignedTechs option:selected").remove();
                saveAssignedTech("remove",toRemove);
            });

            $("#assignTech").click(function() {
                var item = $("#ddlTechnicians option:selected")[0];
                if ($('#assignedTechs option[value=' + item.value + ']').length > 0) return;
                
                var o = new Option(item.text, item.value);
                $(o).html(item.text);
                $("#assignedTechs").append(o);
                
                var toAssign = $("#ddlTechnicians option:selected").val();
                saveAssignedTech("add",toAssign);
            });

            $("#assignPrimaryTech").click(function() {
                $(".primaryTech").removeClass("primaryTech");
                $("#assignedTechs option:selected").addClass("primaryTech");

                var toMakePrimary = $("#assignedTechs option:selected").val();
                saveAssignedTech("primary",toMakePrimary);
                $("#assignedTechs").val([]);
            
            });
     
            startCal = new dhtmlXCalendarObject("Start");
            startCal.setWeekStartDay(7);
            startCal.setDateFormat("%m/%d/%Y %h:%i %A");
            startCal.setDate(new Date($("#Start").val()));
            startCal.attachEvent("onClick", function(date, state) {
                saveJobDates();
            });
        
            endCal = new dhtmlXCalendarObject("End");
            endCal.setWeekStartDay(7);
            endCal.setDateFormat("%m/%d/%Y %h:%i %A");
            endCal.setDate(new Date($("#End").val()));
            endCal.attachEvent("onClick", function(date, state) {
                saveJobDates();
            });
        });

        function sendTablet()
        {
            spin(true);
            var id = @Model.JobID;
        
            $.post('@Url.Action("SendToTablet")', {id: id}, function (result) {
                    alert(result.Message);
                    spin(false);
            });
        }

        function sendBio()
        {
            spin(true);
            var id = @Model.JobID;
        
            $.post('@Url.Action("SendTechBio")', {id: id}, function (result) {
                    alert(result.Message);
                    spin(false);
            });
        }

        function log(msg)
        {
            if (window.parent && window.parent.detailStatus)
                window.parent.detailStatus.setText(msg);
        }

        function spin(flag)
        {
            if (window.parent && window.parent.detailWin)
            {
                var detailWin = window.parent.detailWin;

                if (flag)
                    detailWin.progressOn();
                else 
                   detailWin.progressOff();
            }                
        }
    
        function saveJobDates() {

            spin(true);
            var toPost = { id: @Model.JobID
                             , start:  $("#Start").val()
                             , end: $("#End").val()
                         };


            $.post('@Url.Action("SaveJobDates")', toPost, function(result) {
                if (!result.Success)
                    alert(result.Message);
                else
                    log("New job dates saved: " +  $("#Start").val() + " - " + $("#End").val());
            
                var s = $.format.date(new Date(parseInt(result.Start.substr(6))), 'MM/dd/yyyy hh:mm a');
                var e = $.format.date(new Date(parseInt(result.End.substr(6))), 'MM/dd/yyyy hh:mm a');
                $("#Start").val(s);
                $("#End").val(e);
                startCal.setDate(new Date($("#Start").val()));
                endCal.setDate(new Date($("#End").val()));
            
                spin(false);
            });
        }

    </script>
    <div style="float: left; width: 200px" class="column">
        <fieldset style="height: 140px">
            <legend>Job Info</legend>
            <div>
                <label>
                    Service Pro</label>@Model.ServiceProName
                <br />
                <a href="javascript:sendTablet();">Send Tablet</a>
                <br />
                <a href="javascript:sendBio();">Send Tech Bio</a>
            </div>
            <div>
                <label>Start</label><input type="text" id="Start" value="@Model.Start.GetValueOrDefault().ToString("MM/dd/yyyy hh:mm tt")" readonly="readonly" />
                <label>End</label><input type="text" id="End" value="@Model.End.GetValueOrDefault().ToString("MM/dd/yyyy hh:mm tt")" readonly="readonly" />
                </div>
        </fieldset>
        <fieldset style="height: 100px">
            <legend>Call Reason</legend>
            <div style="overflow: auto">@Model.CallReason</div>
        </fieldset>
        <fieldset style="height: 100px">
            <legend>Customer - Bill To</legend>
            <div>
                @Model.Customer.CustomerName
                <br />@Model.Customer.CompanyName
            </div>
            <div>
                @Model.BillToLocation.Address
            </div>
            <div>
                @Model.BillToLocation.City, @Model.BillToLocation.State @Model.BillToLocation.PostalCode,
                @Model.BillToLocation.Country
            </div>
            <div>
                @Model.BillToContact.PhoneNumber
                <br />
                @(Model.BillToCell == null || string.IsNullOrWhiteSpace(Model.BillToCell.PhoneNumber) ? string.Empty : Model.BillToCell.PhoneNumber + " (Cell)")
                
                <br />
                <a href="mailto:@Model.Customer.EMail">@Model.Customer.EMail</a>
            </div>
        </fieldset>
        <fieldset style="height: 75px">
            <legend>Job Location</legend>
            <div>
                @Model.JobLocationContact.ContactName
            </div>
            <div>
                @Model.JobLocation.Address
            </div>
            <div>
                @Model.JobLocation.City, @Model.JobLocation.State @Model.JobLocation.PostalCode, @Model.JobLocation.Country
            </div>
            <div>
                @Model.JobLocationContact.PhoneNumber
            </div>
        </fieldset>
    </div>
    <div style="float: left; width: 250px;" class="column">
        <fieldset style="padding: 3px;">
            <legend>Job Notes</legend>
            <div>
                <textarea id="newNotes" style="height: 40px; width: 250px"></textarea>
                <div id="pastNotes" style="overflow-x: hidden; overflow-y: scroll; height: 150px; border: 1px solid #c0c0c0">@Html.Raw((Model.Notes ?? string.Empty).Replace("\r\n", "<br />"))</div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Job Status</legend>
            <label>Current Status</label>
                @Html.DropDownListFor(m => m.Status.StatusID, new SelectList((tbl_Job_Status[])ViewBag.Statuses, "StatusID", "Status"), new { @id = "ddlStatus" })
            <div id="cancelReason">
                <label>Cancel Reason</label>
                @Html.DropDownListFor(m => m.CancelReason.CancelReasonID, new SelectList((tbl_Call_CancelReasons[])ViewBag.CancelReasons, "CancelReasonID", "CancelReason"), new { @id = "ddlCancelReason" })
            </div>
            <button type="button" id="changeStatus">Change Status</button>
        </fieldset>
        <fieldset>
            <legend>Assigned Technicians</legend>
            @Html.DropDownList("ddlTechnicians", new SelectList((tbl_Employee[])ViewBag.Technicians, "EmployeeID", "Employee"))
             <button type="button" id="assignTech">Assign</button>
             <select multiple="multiple" id="assignedTechs">
                @foreach (var t in Model.SecondaryTechnicians.Union(new tbl_Employee[] { Model.PrimaryTechnician }))
                {
                    <option @((t == null ? 127 : t.EmployeeID) == (Model.PrimaryTechnician == null ? 127 : Model.PrimaryTechnician.EmployeeID) ? "class=primaryTech" : string.Empty) value="@(t == null ? 127 : t.EmployeeID)">@(t == null ? "N/A" : t.Employee)</option>
                }
            </select>
             <button type="button" id="assignPrimaryTech">Make Primary</button>
             <span style="float:right">*double click to remove.</span>
        </fieldset>
    </div>
    <div class="column" style="float:left;width:250px;">
        <fieldset style="padding: 3px;">
            <legend>Owner Notes</legend>
            <div style="overflow:auto;height:200px;">
                @Model.OwnerNotes
            </div>
        </fieldset>
        <fieldset style="padding: 3px;">
            <legend>Diagnosis Notes</legend>
            <div style="overflow:auto;height:200px;">
                @Model.DiagnosisNotes
            </div>
        </fieldset>
    </div>
</body>
</html>
