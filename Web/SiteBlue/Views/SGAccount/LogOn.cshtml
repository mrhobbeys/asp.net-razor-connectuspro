@model SecurityGuard.ViewModels.LogOnViewModel
@{
    ViewBag.Title = "LogOn";
     Layout = "~/Views/Shared/_LogonLayout.cshtml";
    
}
<link href="@Url.Content("~/Content/themes/base/questionnaire.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/validationEngine.jquery.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery-1.6.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/modernizr-1.7.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/languages/jquery.validationEngine-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="login">
    <div class="logincontainer">
        @using (Html.BeginForm("LogOn", "SGAccount", new { ReturnUrl = Request.QueryString["ReturnUrl"] != null ? Request.QueryString["ReturnUrl"].ToString() : null }, FormMethod.Post, new { id = "form", @class = "form" }))
        {
            @Html.ValidationSummary(true)
            <div class="formLogIn">
                <div class="formComponent formComponentSingleLineText" style="width: 400px">
                    <label for="UserName" class="formComponentLabel">
                        Username:<span class="labelRequiredStar"> *</span></label>
                    @Html.TextBoxFor(model => model.UserName, new { @class = "validate[required]" })
                </div>
                <div class="formComponent formComponentSingleLineText" style="width: 400px">
                    <label for="Password" class="formComponentLabel">
                        Password:<span class="labelRequiredStar"> *</span></label>
                    @Html.TextBoxFor(model => model.Password, new { @class = "validate[required]", type = "password" })
                </div>
                <div class="formComponent formComponentMultipleChoice" style="width: 400px">
                    @Html.EditorFor(model => model.RememberMe)
                    <label for="RememberMe" class="large">
                        Keep me logged in on this computer</label>
                </div>
                <div class="formComponent formComponentSingleLineText" style="width: 400px">
                    <ul class="control">
                        <li><a class="formbutton" id="login">Login</a></li>
                        <li>
                            @if (Model.EnablePasswordReset)
                            {
                                <p>@Html.ActionLink("Forgot Password?", "ForgotPassword")</p>
                            }</li>
                    </ul>
                </div>
            </div>
        }
    </div>
</div>
@section navigation
{
 @*   <nav>
        <ul>
            <li>@Html.ActionLink("Home", "Index", "Home", new { area = "" }, null)</li>
            <li>@Html.ActionLink("About Us", "Index", "Testimonials", new { area = "" }, null)</li>
            <li>@Html.ActionLink("Plumbing", "Index", "Plumbing", new { area = "" }, null)</li>
            <li>@Html.ActionLink("HVAC", "Index", "HvacDescription", new { area = "" }, null)</li>
            <li>@Html.ActionLink("Electrical", "Index", "Electrical", new { area = "" }, null)</li>
            <li>@Html.ActionLink("Contact Us", "Index", "ContactUs", new { area = "" }, null)</li>
        </ul>
    </nav>*@
}
<script type="text/javascript">

    $(function () {
        // binds form submission and fields to the validation engine
        $("form").validationEngine();

        $("#UserName").focus();

        // highlights the parent div when focus a child field
        $("input").focus(function () {
            $('.formComponent').removeClass('formComponentHighlight');
            $(this).parents('.formComponent').addClass('formComponentHighlight');
        });

        $("#login").click(function () {
            logOn();

        });

        $('#UserName').keyup(function (e) {
            //alert(e.keyCode);
            if (e.keyCode == 13) {
                $('#Password').focus();
            }
        });

        $('#Password').keyup(function (e) {
            //alert(e.keyCode);
            if (e.keyCode == 13) {
                logOn();
            }
        });

        function logOn() {
            $('.formComponent').removeClass('formComponentHighlight ')
            $('.formComponent').removeClass('formComponentValidationFailed')
            var $div = $(".formLogIn:visible"); // Get current step
            var validator = $("form").validate(); // Obtain validator
            var anyError = false;

            $div.find("input").each(function () {
                if (!validator.element(this)) {
                    // apply error style
                    $(this).parents('.formComponent').addClass('formComponentValidationFailed');
                    anyError = true;
                }
            });

            if (anyError) return false; // Exit if any error found

            else { // this is last step, submit form
                $("form").submit();
            }
        }
    });
</script>
